{"ast":null,"code":"var _jsxFileName = \"/home/nandakishor/works/youtubeClone/youtube/src/components/VideoContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { video_API } from './utils/constants';\nimport Videos from './Videos';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContainer = () => {\n  _s();\n  const [videos, setVideos] = useState(null);\n  useEffect(() => {\n    getVideos();\n  }, []);\n  const getVideos = async () => {\n    //fetch maincomponente videos info\n    const api = await fetch(video_API);\n    const {\n      items\n    } = await api.json();\n    setVideos(items);\n  };\n  return videos === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-12/12 grid md:grid-cols-4 sm:grid-cols-1\",\n    children: videos.map(data => {\n      return (\n        /*#__PURE__*/\n        //base url id \n        _jsxDEV(Link, {\n          to: \"/watch?v=\" + data.id,\n          children: /*#__PURE__*/_jsxDEV(Videos, {\n            info: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 62\n          }, this)\n        }, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoContainer, \"aK6SML18rP9vWx1epdOAdVF9OHo=\");\n_c = VideoContainer;\nexport default VideoContainer;\nvar _c;\n$RefreshReg$(_c, \"VideoContainer\");","map":{"version":3,"names":["React","useEffect","useState","video_API","Videos","Link","jsxDEV","_jsxDEV","VideoContainer","_s","videos","setVideos","getVideos","api","fetch","items","json","className","children","map","data","to","id","info","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nandakishor/works/youtubeClone/youtube/src/components/VideoContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { video_API } from './utils/constants';\nimport Videos from './Videos';\nimport { Link } from 'react-router-dom';\n\nconst VideoContainer = () => {\n    const [videos, setVideos] = useState(null);\n\n    useEffect(() =>{\n        getVideos();\n    },[])\n\n    const getVideos = async () =>{\n        //fetch maincomponente videos info\n        const api = await fetch(video_API);\n        const {items} = await api.json();\n        setVideos(items);\n    }\n    \n\n  return videos===null?null: (\n    <div className='w-12/12 grid md:grid-cols-4 sm:grid-cols-1'>\n       {\n        videos.map((data) =>{\n            return (\n\n                //base url id \n                <Link key={data.id} to={\"/watch?v=\"+data.id}><Videos info={data}/></Link>\n            )\n        })\n       }\n    </div>\n  )\n}\n\nexport default VideoContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAK;IACXW,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAW;IACzB;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACX,SAAS,CAAC;IAClC,MAAM;MAACY;IAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAChCL,SAAS,CAACI,KAAK,CAAC;EACpB,CAAC;EAGH,OAAOL,MAAM,KAAG,IAAI,GAAC,IAAI,gBACvBH,OAAA;IAAKU,SAAS,EAAC,4CAA4C;IAAAC,QAAA,EAEvDR,MAAM,CAACS,GAAG,CAAEC,IAAI,IAAI;MAChB;QAAA;QAEI;QACAb,OAAA,CAACF,IAAI;UAAegB,EAAE,EAAE,WAAW,GAACD,IAAI,CAACE,EAAG;UAAAJ,QAAA,eAACX,OAAA,CAACH,MAAM;YAACmB,IAAI,EAAEH;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC,GAAvDP,IAAI,CAACE,EAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsD;MAAC;IAEjF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CACN;AACH,CAAC;AAAAlB,EAAA,CA5BKD,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA8BpB,eAAeA,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}