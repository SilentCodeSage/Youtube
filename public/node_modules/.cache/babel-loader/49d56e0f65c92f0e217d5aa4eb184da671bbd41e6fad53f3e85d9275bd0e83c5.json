{"ast":null,"code":"var _jsxFileName = \"/home/nandakishor/works/youtubeClone/youtube/src/components/CommentsContainer.jsx\";\nimport React from \"react\";\nimport Comments from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst comments = [{\n  name: \"modi\",\n  text: \"i am pm of india\",\n  replies: [{\n    name: \"modi\",\n    text: \"i am om of india\",\n    replies: [{\n      name: \"person1\",\n      text: \"This is a reply from person1\"\n    }]\n  }]\n}, {\n  name: \"person1\",\n  text: \"This is a comment from person1\",\n  replies: [{\n    name: \"person1\",\n    text: \"This is a reply from person1\"\n  }]\n}\n// Other comments omitted for brevity\n];\nconst CommentsContainer = ({\n  comments\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl px-5 pl-32 pt-5\",\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), comments.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-200 mb-4 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Comments, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), data.replies && data.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-8\",\n        children: /*#__PURE__*/_jsxDEV(CommentsContainer, {\n          comments: data.replies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = CommentsContainer;\nexport default CommentsContainer;\nvar _c;\n$RefreshReg$(_c, \"CommentsContainer\");","map":{"version":3,"names":["React","Comments","jsxDEV","_jsxDEV","comments","name","text","replies","CommentsContainer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","data","index","length","_c","$RefreshReg$"],"sources":["/home/nandakishor/works/youtubeClone/youtube/src/components/CommentsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport Comments from \"./Comments\";\n\nconst comments = [\n  {\n    name: \"modi\",\n    text: \"i am pm of india\",\n    replies: [\n      {\n        name: \"modi\",\n        text: \"i am om of india\",\n        replies: [\n          {\n            name: \"person1\",\n            text: \"This is a reply from person1\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"person1\",\n    text: \"This is a comment from person1\",\n    replies: [\n      {\n        name: \"person1\",\n        text: \"This is a reply from person1\",\n      },\n    ],\n  },\n  // Other comments omitted for brevity\n];\n\nconst CommentsContainer = ({ comments }) => {\n  return (\n    <div>\n      <div>\n        <h1 className=\"font-bold text-2xl px-5 pl-32 pt-5\">Comments:</h1>\n      </div>\n      {comments.map((data, index) => (\n        <div key={index} className=\"bg-red-200 mb-4 p-4 rounded-lg\">\n          <Comments data={data} />\n          {data.replies && data.replies.length > 0 && (\n            <div className=\"ml-8\">\n              <CommentsContainer comments={data.replies} />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CommentsContainer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAG,CACf;EACEC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,kBAAkB;IACxBC,OAAO,EAAE,CACP;MACEF,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL;AACA;AAAA,CACD;AAED,MAAME,iBAAiB,GAAGA,CAAC;EAAEJ;AAAS,CAAC,KAAK;EAC1C,oBACED,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,eACEN,OAAA;QAAIO,SAAS,EAAC,oCAAoC;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,EACLV,QAAQ,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBd,OAAA;MAAiBO,SAAS,EAAC,gCAAgC;MAAAD,QAAA,gBACzDN,OAAA,CAACF,QAAQ;QAACe,IAAI,EAAEA;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvBE,IAAI,CAACT,OAAO,IAAIS,IAAI,CAACT,OAAO,CAACW,MAAM,GAAG,CAAC,iBACtCf,OAAA;QAAKO,SAAS,EAAC,MAAM;QAAAD,QAAA,eACnBN,OAAA,CAACK,iBAAiB;UAACJ,QAAQ,EAAEY,IAAI,CAACT;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN;IAAA,GANOG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GAlBIX,iBAAiB;AAoBvB,eAAeA,iBAAiB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}