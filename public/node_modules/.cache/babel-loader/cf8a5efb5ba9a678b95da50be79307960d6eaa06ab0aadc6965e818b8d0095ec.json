{"ast":null,"code":"var _jsxFileName = \"/home/nandakishor/works/youtubeClone/youtube/src/components/Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleMenu } from \"./utils/appSlice\";\nimport { cacheResults } from \"./utils/searchSlice\";\nimport { toggleState } from \"./utils/appSlice\";\nimport { newSearchQuery } from \"./utils/searchSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [searchData, setSearchData] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const searchCache = useSelector(store => store.search);\n  const searchQuery = useSelector(store => store.search.searchQuery);\n  const isClicked = useSelector(store => store.app.isClicked);\n  const toggleMenuHandler = () => {\n    dispatch(toggleMenu());\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      /// if cached and data is found in the cache\n      if (searchCache[searchData]) {\n        setSearchData(searchData);\n      } else {\n        fetchData();\n      }\n    }, 2000);\n    fetchData();\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchData]);\n  const fetchData = async () => {\n    const api = await fetch(\"http://suggestqueries.google.com/complete/search?client=firefox&ds=yt&q=\" + searchData);\n    const result = await api.json();\n    // console.log(result);\n    setSuggestions(result[1]);\n    //update cache\n\n    dispatch(cacheResults({\n      [searchData]: result[1]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"TOTR6M4GYL2+73KuQKoE0VV7fWs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","toggleMenu","cacheResults","toggleState","newSearchQuery","jsxDEV","_jsxDEV","Header","_s","dispatch","searchData","setSearchData","suggestions","setSuggestions","showSuggestions","setShowSuggestions","searchCache","store","search","searchQuery","isClicked","app","toggleMenuHandler","timer","setTimeout","fetchData","clearTimeout","api","fetch","result","json","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nandakishor/works/youtubeClone/youtube/src/components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleMenu } from \"./utils/appSlice\";\nimport { cacheResults } from \"./utils/searchSlice\";\nimport { toggleState } from \"./utils/appSlice\";\nimport { newSearchQuery } from \"./utils/searchSlice\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const [searchData, setSearchData] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const searchCache = useSelector((store) => store.search);\n  const searchQuery = useSelector((store) => store.search.searchQuery);\n  const isClicked = useSelector((store) => store.app.isClicked)\n  const toggleMenuHandler = () => {\n    dispatch(toggleMenu());\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      /// if cached and data is found in the cache\n      if (searchCache[searchData]) {\n        setSearchData(searchData);\n      } else {\n        fetchData();\n      }\n    }, 2000);\n\n    fetchData();\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchData]);\n\n  const fetchData = async () => {\n    const api = await fetch(\n      \"http://suggestqueries.google.com/complete/search?client=firefox&ds=yt&q=\" +\n        searchData\n    );\n    const result = await api.json();\n    // console.log(result);\n    setSuggestions(result[1]);\n    //update cache\n\n    dispatch(\n      cacheResults({\n        [searchData]: result[1],\n      })\n    );\n  };\n\n  return (\n    <div>\n      \n    </div>\n  );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMkB,WAAW,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EACxD,MAAMC,WAAW,GAAGnB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,WAAW,CAAC;EACpE,MAAMC,SAAS,GAAGpB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACI,GAAG,CAACD,SAAS,CAAC;EAC7D,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bb,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACd,MAAM0B,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7B;MACA,IAAIR,WAAW,CAACN,UAAU,CAAC,EAAE;QAC3BC,aAAa,CAACD,UAAU,CAAC;MAC3B,CAAC,MAAM;QACLe,SAAS,CAAC,CAAC;MACb;IACF,CAAC,EAAE,IAAI,CAAC;IAERA,SAAS,CAAC,CAAC;IACX,OAAO,MAAM;MACXC,YAAY,CAACH,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAME,GAAG,GAAG,MAAMC,KAAK,CACrB,0EAA0E,GACxElB,UACJ,CAAC;IACD,MAAMmB,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC/B;IACAjB,cAAc,CAACgB,MAAM,CAAC,CAAC,CAAC,CAAC;IACzB;;IAEApB,QAAQ,CACNP,YAAY,CAAC;MACX,CAACQ,UAAU,GAAGmB,MAAM,CAAC,CAAC;IACxB,CAAC,CACH,CAAC;EACH,CAAC;EAED,oBACEvB,OAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnDID,MAAM;EAAA,QACOR,WAAW,EAKRC,WAAW,EACXA,WAAW,EACbA,WAAW;AAAA;AAAAmC,EAAA,GARzB5B,MAAM;AAqDZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}