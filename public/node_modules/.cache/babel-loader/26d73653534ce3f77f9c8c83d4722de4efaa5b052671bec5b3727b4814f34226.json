{"ast":null,"code":"var _jsxFileName = \"/home/nandakishor/works/youtubeClone/youtube/src/components/CommentsContainer.jsx\";\nimport React from \"react\";\nimport Comments from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst comments = [{\n  name: \"modi\",\n  text: \"i am pm of india\",\n  replies: [{\n    name: \"modi\",\n    text: \"i am om of india\",\n    replies: [{\n      name: \"person1\",\n      text: \"This is a reply from person1\"\n    }]\n  }]\n}, {\n  name: \"person1\",\n  text: \"This is a comment from person1\",\n  replies: [{\n    name: \"person1\",\n    text: \"This is a reply from person1\"\n  }]\n}, {\n  name: \"person2\",\n  text: \"This is a comment from person2\",\n  replies: [{\n    name: \"person2\",\n    text: \"This is a reply from person2\"\n  }]\n}, {\n  name: \"person3\",\n  text: \"This is a comment from person3\",\n  replies: [{\n    name: \"person3\",\n    text: \"This is a reply from person3\"\n  }]\n}, {\n  name: \"person4\",\n  text: \"This is a comment from person4\",\n  replies: [{\n    name: \"person4\",\n    text: \"This is a reply from person4\"\n  }]\n}, {\n  name: \"person5\",\n  text: \"This is a comment from person5\",\n  replies: [{\n    name: \"person5\",\n    text: \"This is a reply from person5\"\n  }]\n}, {\n  name: \"person6\",\n  text: \"This is a comment from person6\",\n  replies: [{\n    name: \"person6\",\n    text: \"This is a reply from person6\"\n  }]\n}, {\n  name: \"person7\",\n  text: \"This is a comment from person7\",\n  replies: [{\n    name: \"person7\",\n    text: \"This is a reply from person7\"\n  }]\n}, {\n  name: \"person8\",\n  text: \"This is a comment from person8\",\n  replies: [{\n    name: \"person8\",\n    text: \"This is a reply from person8\"\n  }]\n}, {\n  name: \"person9\",\n  text: \"This is a comment from person9\",\n  replies: [{\n    name: \"person9\",\n    text: \"This is a reply from person9\"\n  }]\n}, {\n  name: \"person10\",\n  text: \"This is a comment from person10\",\n  replies: [{\n    name: \"person10\",\n    text: \"This is a reply from person10\"\n  }]\n}];\nconst CommentsContainer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl px-5 pl-32 pt-5\",\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this),\n    //change the key\n    comments.map((data, index) => {\n      return;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_c = CommentsContainer;\nexport default CommentsContainer;\nvar _c;\n$RefreshReg$(_c, \"CommentsContainer\");","map":{"version":3,"names":["React","Comments","jsxDEV","_jsxDEV","comments","name","text","replies","CommentsContainer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","data","index","_c","$RefreshReg$"],"sources":["/home/nandakishor/works/youtubeClone/youtube/src/components/CommentsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport Comments from \"./Comments\";\n\nconst comments = [\n  {\n    name: \"modi\",\n    text: \"i am pm of india\",\n    replies: [\n      {\n        name: \"modi\",\n        text: \"i am om of india\",\n        replies: [\n          {\n            name: \"person1\",\n            text: \"This is a reply from person1\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"person1\",\n    text: \"This is a comment from person1\",\n    replies: [\n      {\n        name: \"person1\",\n        text: \"This is a reply from person1\",\n      },\n    ],\n  },\n  {\n    name: \"person2\",\n    text: \"This is a comment from person2\",\n    replies: [\n      {\n        name: \"person2\",\n        text: \"This is a reply from person2\",\n      },\n    ],\n  },\n  {\n    name: \"person3\",\n    text: \"This is a comment from person3\",\n    replies: [\n      {\n        name: \"person3\",\n        text: \"This is a reply from person3\",\n      },\n    ],\n  },\n  {\n    name: \"person4\",\n    text: \"This is a comment from person4\",\n    replies: [\n      {\n        name: \"person4\",\n        text: \"This is a reply from person4\",\n      },\n    ],\n  },\n  {\n    name: \"person5\",\n    text: \"This is a comment from person5\",\n    replies: [\n      {\n        name: \"person5\",\n        text: \"This is a reply from person5\",\n      },\n    ],\n  },\n  {\n    name: \"person6\",\n    text: \"This is a comment from person6\",\n    replies: [\n      {\n        name: \"person6\",\n        text: \"This is a reply from person6\",\n      },\n    ],\n  },\n  {\n    name: \"person7\",\n    text: \"This is a comment from person7\",\n    replies: [\n      {\n        name: \"person7\",\n        text: \"This is a reply from person7\",\n      },\n    ],\n  },\n  {\n    name: \"person8\",\n    text: \"This is a comment from person8\",\n    replies: [\n      {\n        name: \"person8\",\n        text: \"This is a reply from person8\",\n      },\n    ],\n  },\n  {\n    name: \"person9\",\n    text: \"This is a comment from person9\",\n    replies: [\n      {\n        name: \"person9\",\n        text: \"This is a reply from person9\",\n      },\n    ],\n  },\n  {\n    name: \"person10\",\n    text: \"This is a comment from person10\",\n    replies: [\n      {\n        name: \"person10\",\n        text: \"This is a reply from person10\",\n      },\n    ],\n  },\n];\n\nconst CommentsContainer = () => {\n  return (\n    <div>\n      <div>\n        <h1 className=\"font-bold text-2xl px-5 pl-32 pt-5\">Comments:</h1>\n      </div>\n      {\n        //change the key\n        comments.map((data, index) => {\n          return \n        })\n      }\n    </div>\n  );\n};\n\nexport default CommentsContainer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAG,CACf;EACEC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,kBAAkB;IACxBC,OAAO,EAAE,CACP;MACEF,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,gCAAgC;EACtCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,iCAAiC;EACvCC,OAAO,EAAE,CACP;IACEF,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,CACF;AAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,oBACEL,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,eACEN,OAAA;QAAIO,SAAS,EAAC,oCAAoC;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;IAEJ;IACAV,QAAQ,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC5B;IACF,CAAC,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAACI,EAAA,GAdIV,iBAAiB;AAgBvB,eAAeA,iBAAiB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}